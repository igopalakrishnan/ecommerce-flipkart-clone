{"ast":null,"code":"var _jsxFileName = \"/Users/gokul/Documents/M/mern-ecommerce/flipkart-clone/src/containers/CartPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Layout from \"../../components/Layout\";\nimport Card from \"../../components/UI/Card\";\nimport CartItem from \"./CartItem\";\nimport { addToCart, getCartItems, removeCartItem } from \"../../actions\"; //import PriceDetails from \"../../components/PriceDetails\";\n\nimport \"./style.css\";\nimport { MaterialButton } from \"../../components/MaterialUI\";\n/**\n * @author\n * @function CartPage\n **/\n\n/*\nBefore Login\nAdd product to cart\nsave in localStorage\nwhen try to checkout ask for credentials and \nif logged in then add products to users cart database from localStorage\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartPage = props => {\n  _s();\n\n  const cart = useSelector(state => state.cart); //const cartItems = cart.cartItems;\n\n  const [cartItems, setCartItems] = useState(cart.cartItems); // const auth = useSelector((state) => state.auth);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setCartItems(cart.cartItems);\n  }, [cart.cartItems]);\n  /* useEffect(() => {\n     if (auth.authenticate) {\n       dispatch(getCartItems());\n     }\n   }, [auth.authenticate]); */\n\n  const onQuantityIncrement = (_id, qty) => {\n    console.log({\n      _id,\n      qty\n    });\n    const {\n      name,\n      price,\n      img\n    } = cartItems[_id];\n    dispatch(addToCart({\n      _id,\n      name,\n      price,\n      img\n    }, 1));\n  };\n\n  const onQuantityDecrement = (_id, qty) => {//const { name, price, img } = cartItems[_id];\n    //dispatch(addToCart({ _id, name, price, img }, -1));\n  };\n  /* const onRemoveCartItem = (_id) => {\n     dispatch(removeCartItem({ productId: _id }));\n   };\n      if (props.onlyCartItems) {\n     return (\n       <>\n         {Object.keys(cartItems).map((key, index) => (\n           <CartItem\n             key={index}\n             cartItem={cartItems[key]}\n             onQuantityInc={onQuantityIncrement}\n             onQuantityDec={onQuantityDecrement}\n           />\n         ))}\n       </>\n     );\n   } */\n\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cartContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        headerLeft: `My Cart`,\n        headerRight: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Deliver to\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 34\n        }, this),\n        children: Object.keys(cartItems).map((key, index) => /*#__PURE__*/_jsxDEV(CartItem, {\n          cartItem: cartItems[key],\n          onQuantityInc: onQuantityIncrement,\n          onQuantityDec: onQuantityDecrement\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '500px'\n        },\n        children: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartPage, \"CBwXY7sm9plpAhJeVaxy2S3Qgfk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CartPage;\nexport default CartPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"sources":["/Users/gokul/Documents/M/mern-ecommerce/flipkart-clone/src/containers/CartPage/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Layout","Card","CartItem","addToCart","getCartItems","removeCartItem","MaterialButton","CartPage","props","cart","state","cartItems","setCartItems","dispatch","onQuantityIncrement","_id","qty","console","log","name","price","img","onQuantityDecrement","Object","keys","map","key","index","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,cAAlC,QAAwD,eAAxD,C,CACA;;AAEA,OAAO,aAAP;AACA,SAASC,cAAT,QAA+B,6BAA/B;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAMC,IAAI,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB,CAFwB,CAGxB;;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAACY,IAAI,CAACE,SAAN,CAA1C,CAJwB,CAKvB;;AACA,QAAME,QAAQ,GAAGf,WAAW,EAA5B;AAEDF,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,YAAY,CAACH,IAAI,CAACE,SAAN,CAAZ;AACH,GAFQ,EAEN,CAACF,IAAI,CAACE,SAAN,CAFM,CAAT;AAKD;AACH;AACA;AACA;AACA;;AAEI,QAAMG,mBAAmB,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACH,MAAAA,GAAD;AAAMC,MAAAA;AAAN,KAAZ;AACA,UAAM;AAAEG,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAAuBV,SAAS,CAACI,GAAD,CAAtC;AACAF,IAAAA,QAAQ,CAACV,SAAS,CAAC;AAAEY,MAAAA,GAAF;AAAOI,MAAAA,IAAP;AAAaC,MAAAA,KAAb;AAAoBC,MAAAA;AAApB,KAAD,EAA4B,CAA5B,CAAV,CAAR;AACD,GAJD;;AAMA,QAAMC,mBAAmB,GAAG,CAACP,GAAD,EAAMC,GAAN,KAAc,CACxC;AACA;AACD,GAHD;AAKD;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKI,sBACI,QAAC,MAAD;AAAA,2BA+CI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI,QAAC,IAAD;AACI,QAAA,UAAU,EAAG,SADjB;AAEI,QAAA,WAAW,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFjB;AAAA,kBAKQO,MAAM,CAACC,IAAP,CAAYb,SAAZ,EAAuBc,GAAvB,CAA2B,CAACC,GAAD,EAAMC,KAAN,kBACvB,QAAC,QAAD;AAEI,UAAA,QAAQ,EAAEhB,SAAS,CAACe,GAAD,CAFvB;AAGI,UAAA,aAAa,EAAEZ,mBAHnB;AAII,UAAA,aAAa,EAAEQ;AAJnB,WACSK,KADT;AAAA;AAAA;AAAA;AAAA,gBADJ;AALR;AAAA;AAAA;AAAA;AAAA,cADJ,eAgBI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AACTC,UAAAA,KAAK,EAAE;AADE,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AA/CJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsEH,CAzHD;;GAAMrB,Q;UAEWR,W,EAIKD,W;;;KANhBS,Q;AA2HN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Layout from \"../../components/Layout\";\nimport Card from \"../../components/UI/Card\";\nimport CartItem from \"./CartItem\";\nimport { addToCart, getCartItems, removeCartItem } from \"../../actions\";\n//import PriceDetails from \"../../components/PriceDetails\";\n\nimport \"./style.css\";\nimport { MaterialButton } from \"../../components/MaterialUI\";\n\n/**\n * @author\n * @function CartPage\n **/\n\n/*\nBefore Login\nAdd product to cart\nsave in localStorage\nwhen try to checkout ask for credentials and \nif logged in then add products to users cart database from localStorage\n*/\n\nconst CartPage = (props) => {\n\n    const cart = useSelector((state) => state.cart);\n    //const cartItems = cart.cartItems;\n    const [cartItems, setCartItems] = useState(cart.cartItems);\n     // const auth = useSelector((state) => state.auth);\n     const dispatch = useDispatch();\n\n    useEffect(() => {\n        setCartItems(cart.cartItems);\n    }, [cart.cartItems]);\n    \n  \n   /* useEffect(() => {\n      if (auth.authenticate) {\n        dispatch(getCartItems());\n      }\n    }, [auth.authenticate]); */\n  \n    const onQuantityIncrement = (_id, qty) => {\n      console.log({_id, qty});\n      const { name, price, img } = cartItems[_id];\n      dispatch(addToCart({ _id, name, price, img }, 1));\n    };\n  \n    const onQuantityDecrement = (_id, qty) => {\n      //const { name, price, img } = cartItems[_id];\n      //dispatch(addToCart({ _id, name, price, img }, -1));\n    };\n  \n   /* const onRemoveCartItem = (_id) => {\n      dispatch(removeCartItem({ productId: _id }));\n    };\n  \n    if (props.onlyCartItems) {\n      return (\n        <>\n          {Object.keys(cartItems).map((key, index) => (\n            <CartItem\n              key={index}\n              cartItem={cartItems[key]}\n              onQuantityInc={onQuantityIncrement}\n              onQuantityDec={onQuantityDecrement}\n            />\n          ))}\n        </>\n      );\n    } */\n\n    \n\n    return (\n        <Layout>\n            {/* <div className=\"cartContainer\" style={{ alignItems: \"flex-start\" }}>\n        <Card\n          headerLeft={`My Cart`}\n          headerRight={<div>Deliver to</div>}\n          style={{ width: \"calc(100% - 400px)\", overflow: \"hidden\" }}\n        >\n          {Object.keys(cartItems).map((key, index) => (\n            <CartItem\n              key={index}\n              cartItem={cartItems[key]}\n              onQuantityInc={onQuantityIncrement}\n              onQuantityDec={onQuantityDecrement}\n              onRemoveCartItem={onRemoveCartItem}\n            />\n          ))}\n\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              background: \"#ffffff\",\n              justifyContent: \"flex-end\",\n              boxShadow: \"0 0 10px 10px #eee\",\n              padding: \"10px 0\",\n              boxSizing: \"border-box\",\n            }}\n          >\n            <div style={{ width: \"250px\" }}>\n              <MaterialButton\n                title=\"PLACE ORDER\"\n                onClick={() => props.history.push(`/checkout`)}\n              />\n            </div>\n          </div>\n        </Card>\n        <PriceDetails\n          totalItem={Object.keys(cart.cartItems).reduce(function (qty, key) {\n            return qty + cart.cartItems[key].qty;\n          }, 0)}\n          totalPrice={Object.keys(cart.cartItems).reduce((totalPrice, key) => {\n            const { price, qty } = cart.cartItems[key];\n            return totalPrice + price * qty;\n          }, 0)}\n        />\n      </div> */}\n\n            <div className='cartContainer'>\n                <Card\n                    headerLeft={`My Cart`}\n                    headerRight={<div>Deliver to</div>}\n                >\n                    {\n                        Object.keys(cartItems).map((key, index) =>\n                            <CartItem\n                                key={index}\n                                cartItem={cartItems[key]}\n                                onQuantityInc={onQuantityIncrement}\n                                onQuantityDec={onQuantityDecrement}\n                            />\n                        )\n                    }\n                </Card>\n                <Card style={{\n                    width: '500px'\n                }}>Price</Card>\n            </div>\n        </Layout>\n    );\n};\n\nexport default CartPage;"]},"metadata":{},"sourceType":"module"}