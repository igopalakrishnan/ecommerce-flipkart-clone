{"ast":null,"code":"var _jsxFileName = \"/Users/gokul/Documents/M/mern-ecommerce/flipkart-clone/src/containers/CheckoutPage/AddressForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addAddress } from \"../../actions\";\nimport { MaterialButton, MaterialInput } from \"../../components/MaterialUI\";\n/**\n * @author\n * @function AddressForm\n **/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddressForm = props => {\n  _s();\n\n  //const { initialData } = props;\n  const [name, setName] = useState(\n  /* initialData ? initialData.name :  */\n  \"\");\n  const [mobileNumber, setMobileNumber] = useState(\n  /* initialData ? initialData.mobileNumber : */\n  \"\");\n  const [pinCode, setPinCode] = useState(\n  /* initialData ? initialData.pinCode : */\n  \"\");\n  const [locality, setLocality] = useState(\n  /* initialData ? initialData.locality : */\n  \"\");\n  const [address, setAddress] = useState(\n  /* initialData ? initialData.address : */\n  \"\");\n  const [cityDistrictTown, setCityDistrictTown] = useState(\n  /* initialData ? initialData.cityDistrictTown : */\n  \"\");\n  const [state, setState] = useState(\n  /* initialData ? initialData.state : */\n  \"\");\n  const [landmark, setLandmark] = useState(\n  /* initialData ? initialData.landmark : */\n  \"\");\n  const [alternatePhone, setAlternatePhone] = useState(\n  /* initialData ? initialData.alternatePhone : */\n  \"\");\n  const [addressType, setAddressType] = useState(\n  /* initialData ? initialData.addressType : */\n  \"\");\n  const dispatch = useDispatch(); //const user = useSelector((state) => state.user);\n  //const [submitFlag, setSubmitFlag] = useState(false);\n  //const [id, setId] = useState(initialData ? initialData._id : \"\");\n\n  const inputContainer = {\n    width: \"100%\",\n    marginRight: 10\n  };\n\n  const onAddressSubmit = e => {\n    const payload = {\n      address: {\n        name,\n        mobileNumber,\n        pinCode,\n        locality,\n        address,\n        cityDistrictTown,\n        state,\n        landmark,\n        alternatePhone,\n        addressType\n      }\n    };\n    console.log(payload);\n    /* if (id) {\n      payload.address._id = id;\n    } */\n\n    dispatch(addAddress(payload)); //setSubmitFlag(true);\n  };\n  /*  useEffect(() => {\n     console.log(\"addressCount\", user.address);\n     if (submitFlag) {\n       console.log(\"where are we\", user);\n       let _address = {};\n       if (id) {\n         _address = {\n           _id: id,\n           name,\n           mobileNumber,\n           pinCode,\n           locality,\n           address,\n           cityDistrictTown,\n           state,\n           landmark,\n           alternatePhone,\n           addressType,\n         };\n       } else {\n         _address = user.address.slice(user.address.length - 1)[0];\n       }\n        props.onSubmitForm(_address);\n     }\n   }, [user.address]);\n    const renderAddressForm = () => {\n     return (\n       <>\n         <div className=\"flexRow\">\n           <div style={inputContainer}>\n             <MaterialInput\n               label=\"Name\"\n               value={name}\n               onChange={(e) => setName(e.target.value)}\n             />\n           </div>\n           <div style={inputContainer}>\n             <MaterialInput\n               label=\"10-digit mobile number\"\n               value={mobileNumber}\n               onChange={(e) => setMobileNumber(e.target.value)}\n             />\n           </div>\n         </div>\n         <div className=\"flexRow\">\n           <div style={inputContainer}>\n             <MaterialInput\n               label=\"Pincode\"\n               value={pinCode}\n               onChange={(e) => setPinCode(e.target.value)}\n             />\n           </div>\n           <div style={inputContainer}>\n             <MaterialInput\n               label=\"Locality\"\n               value={locality}\n               onChange={(e) => setLocality(e.target.value)}\n             />\n           </div>\n         </div>\n         <div className=\"flexRow\">\n           <div style={inputContainer}>\n             <MaterialInput\n               label=\"Address\"\n               value={address}\n               onChange={(e) => setAddress(e.target.value)}\n             />\n           </div>\n         </div>\n          <div className=\"flexRow\">\n           <div style={inputContainer}>\n             <MaterialInput\n               label=\"City/District/Town\"\n               value={cityDistrictTown}\n               onChange={(e) => setCityDistrictTown(e.target.value)}\n             />\n           </div>\n           <div style={inputContainer}>\n             <MaterialInput\n               label=\"State\"\n               value={state}\n               onChange={(e) => setState(e.target.value)}\n             />\n           </div>\n         </div>\n         <div className=\"flexRow\">\n           <div style={inputContainer}>\n             <MaterialInput\n               label=\"Landmark (Optional)\"\n               value={landmark}\n               onChange={(e) => setLandmark(e.target.value)}\n             />\n           </div>\n           <div style={inputContainer}>\n             <MaterialInput\n               label=\"Alternate Phone (Optional)\"\n               value={alternatePhone}\n               onChange={(e) => setAlternatePhone(e.target.value)}\n             />\n           </div>\n         </div>\n         <div>\n           <label>Address Type</label>\n           <div className=\"flexRow\">\n             <div>\n               <input\n                 type=\"radio\"\n                 onClick={() => setAddressType(\"home\")}\n                 name=\"addressType\"\n                 value=\"home\"\n               />\n               <span>Home</span>\n             </div>\n             <div>\n               <input\n                 type=\"radio\"\n                 onClick={() => setAddressType(\"work\")}\n                 name=\"addressType\"\n                 value=\"work\"\n               />\n               <span>Work</span>\n             </div>\n           </div>\n         </div>\n         <div className=\"flexRow\">\n           <MaterialButton\n             title=\"SAVE AND DELIVER HERE\"\n             onClick={onAddressSubmit}\n             style={{\n               width: \"250px\",\n               margin: \"20px 0\",\n             }}\n           />\n         </div>\n       </>\n     );\n   };\n    if (props.withoutLayout) {\n     return <div>{renderAddressForm()}</div>;\n   } */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkoutStep\",\n    style: {\n      background: \"#f5faff\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `checkoutHeader`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stepNumber\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stepTitle\",\n          children: \"ADD NEW ADDRESS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"0 60px\",\n        paddingBottom: \"20px\",\n        boxSizing: \"border-box\"\n      },\n      children: renderAddressForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddressForm, \"i2xZdcarztyTP4lndALn2kgoIsE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddressForm;\nexport default AddressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"sources":["/Users/gokul/Documents/M/mern-ecommerce/flipkart-clone/src/containers/CheckoutPage/AddressForm.js"],"names":["React","useEffect","useState","useDispatch","useSelector","addAddress","MaterialButton","MaterialInput","AddressForm","props","name","setName","mobileNumber","setMobileNumber","pinCode","setPinCode","locality","setLocality","address","setAddress","cityDistrictTown","setCityDistrictTown","state","setState","landmark","setLandmark","alternatePhone","setAlternatePhone","addressType","setAddressType","dispatch","inputContainer","width","marginRight","onAddressSubmit","e","payload","console","log","background","padding","paddingBottom","boxSizing","renderAddressForm"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addAddress } from \"../../actions\";\nimport { MaterialButton, MaterialInput } from \"../../components/MaterialUI\";\n\n/**\n * @author\n * @function AddressForm\n **/\n\nconst AddressForm = (props) => {\n  //const { initialData } = props;\n  const [name, setName] = useState(/* initialData ? initialData.name :  */\"\");\n  const [mobileNumber, setMobileNumber] = useState(\n    /* initialData ? initialData.mobileNumber : */ \"\"\n  );\n  const [pinCode, setPinCode] = useState(\n    /* initialData ? initialData.pinCode : */ \"\"\n  );\n  const [locality, setLocality] = useState(\n    /* initialData ? initialData.locality : */ \"\"\n  );\n  const [address, setAddress] = useState(\n    /* initialData ? initialData.address : */ \"\"\n  );\n  const [cityDistrictTown, setCityDistrictTown] = useState(\n    /* initialData ? initialData.cityDistrictTown : */ \"\"\n  );\n  const [state, setState] = useState(/* initialData ? initialData.state : */ \"\");\n  const [landmark, setLandmark] = useState(\n    /* initialData ? initialData.landmark : */ \"\"\n  );\n  const [alternatePhone, setAlternatePhone] = useState(\n    /* initialData ? initialData.alternatePhone : */ \"\"\n  );\n  const [addressType, setAddressType] = useState(\n    /* initialData ? initialData.addressType : */ \"\"\n  );\n  const dispatch = useDispatch();\n  //const user = useSelector((state) => state.user);\n  //const [submitFlag, setSubmitFlag] = useState(false);\n  //const [id, setId] = useState(initialData ? initialData._id : \"\");\n\n  const inputContainer = {\n    width: \"100%\",\n    marginRight: 10,\n  };\n\n  const onAddressSubmit = (e) => {\n    const payload = {\n      address: {\n        name,\n        mobileNumber,\n        pinCode,\n        locality,\n        address,\n        cityDistrictTown,\n        state,\n        landmark,\n        alternatePhone,\n        addressType,\n      },\n    };\n    console.log(payload);\n    /* if (id) {\n      payload.address._id = id;\n    } */\n    dispatch(addAddress(payload));\n    //setSubmitFlag(true);\n  };\n\n /*  useEffect(() => {\n    console.log(\"addressCount\", user.address);\n    if (submitFlag) {\n      console.log(\"where are we\", user);\n      let _address = {};\n      if (id) {\n        _address = {\n          _id: id,\n          name,\n          mobileNumber,\n          pinCode,\n          locality,\n          address,\n          cityDistrictTown,\n          state,\n          landmark,\n          alternatePhone,\n          addressType,\n        };\n      } else {\n        _address = user.address.slice(user.address.length - 1)[0];\n      }\n\n      props.onSubmitForm(_address);\n    }\n  }, [user.address]);\n\n  const renderAddressForm = () => {\n    return (\n      <>\n        <div className=\"flexRow\">\n          <div style={inputContainer}>\n            <MaterialInput\n              label=\"Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n          <div style={inputContainer}>\n            <MaterialInput\n              label=\"10-digit mobile number\"\n              value={mobileNumber}\n              onChange={(e) => setMobileNumber(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"flexRow\">\n          <div style={inputContainer}>\n            <MaterialInput\n              label=\"Pincode\"\n              value={pinCode}\n              onChange={(e) => setPinCode(e.target.value)}\n            />\n          </div>\n          <div style={inputContainer}>\n            <MaterialInput\n              label=\"Locality\"\n              value={locality}\n              onChange={(e) => setLocality(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"flexRow\">\n          <div style={inputContainer}>\n            <MaterialInput\n              label=\"Address\"\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div className=\"flexRow\">\n          <div style={inputContainer}>\n            <MaterialInput\n              label=\"City/District/Town\"\n              value={cityDistrictTown}\n              onChange={(e) => setCityDistrictTown(e.target.value)}\n            />\n          </div>\n          <div style={inputContainer}>\n            <MaterialInput\n              label=\"State\"\n              value={state}\n              onChange={(e) => setState(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"flexRow\">\n          <div style={inputContainer}>\n            <MaterialInput\n              label=\"Landmark (Optional)\"\n              value={landmark}\n              onChange={(e) => setLandmark(e.target.value)}\n            />\n          </div>\n          <div style={inputContainer}>\n            <MaterialInput\n              label=\"Alternate Phone (Optional)\"\n              value={alternatePhone}\n              onChange={(e) => setAlternatePhone(e.target.value)}\n            />\n          </div>\n        </div>\n        <div>\n          <label>Address Type</label>\n          <div className=\"flexRow\">\n            <div>\n              <input\n                type=\"radio\"\n                onClick={() => setAddressType(\"home\")}\n                name=\"addressType\"\n                value=\"home\"\n              />\n              <span>Home</span>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                onClick={() => setAddressType(\"work\")}\n                name=\"addressType\"\n                value=\"work\"\n              />\n              <span>Work</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"flexRow\">\n          <MaterialButton\n            title=\"SAVE AND DELIVER HERE\"\n            onClick={onAddressSubmit}\n            style={{\n              width: \"250px\",\n              margin: \"20px 0\",\n            }}\n          />\n        </div>\n      </>\n    );\n  };\n\n  if (props.withoutLayout) {\n    return <div>{renderAddressForm()}</div>;\n  } */\n\n  return (\n    <div className=\"checkoutStep\" style={{ background: \"#f5faff\" }}>\n      <div className={`checkoutHeader`}>\n        <div>\n          <span className=\"stepNumber\">+</span>\n          <span className=\"stepTitle\">{\"ADD NEW ADDRESS\"}</span>\n        </div>\n      </div>\n      <div\n        style={{\n          padding: \"0 60px\",\n          paddingBottom: \"20px\",\n          boxSizing: \"border-box\",\n        }}\n      >\n        {renderAddressForm()}\n      </div>\n    </div>\n  );\n};\n\nexport default AddressForm;"]},"metadata":{},"sourceType":"module"}