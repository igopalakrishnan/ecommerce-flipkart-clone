{"ast":null,"code":"import axios from \"../helpers/axios\";\nimport { productConstants } from \"./constants\";\nexport const getProductsBySlug = slug => {\n  return async dispatch => {\n    const res = await axios.get(`/products/${slug}`);\n\n    if (res.status === 200) {\n      dispatch({\n        type: productConstants.GET_PRODUCTS_BY_SLUG,\n        payload: res.data\n      });\n    } //console.log(res);\n\n  };\n};\nexport const getProductPage = payload => {\n  return async dispatch => {\n    try {\n      const {\n        cid,\n        type\n      } = payload.params;\n      console.log({\n        payload\n      });\n      const res = await axios.get(`/page/${cid}/${type}`);\n      dispatch({\n        type: productConstants.GET_PRODUCT_PAGE_REQUEST\n      });\n      console.log(res);\n\n      if (res.status === 200) {\n        const {\n          page\n        } = res.data;\n        dispatch({\n          type: productConstants.GET_PRODUCT_PAGE_SUCCESS,\n          payload: {\n            page\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: productConstants.GET_PRODUCT_PAGE_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const getProductDetailsById = payload => {\n  return async dispatch => {\n    dispatch({\n      type: productConstants.GET_PRODUCT_DETAILS_BY_ID_REQUEST\n    });\n    let res;\n\n    try {\n      const {\n        productId\n      } = payload.params;\n      res = await axios.get(`/product/${productId}`);\n      console.log(res);\n      dispatch({\n        type: productConstants.GET_PRODUCT_DETAILS_BY_ID_SUCCESS,\n        payload: {\n          productDetails: res.data.product\n        }\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: productConstants.GET_PRODUCT_DETAILS_BY_ID_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/gokul/Documents/M/mern-ecommerce/flipkart-clone/src/actions/product.action.js"],"names":["axios","productConstants","getProductsBySlug","slug","dispatch","res","get","status","type","GET_PRODUCTS_BY_SLUG","payload","data","getProductPage","cid","params","console","log","GET_PRODUCT_PAGE_REQUEST","page","GET_PRODUCT_PAGE_SUCCESS","error","GET_PRODUCT_PAGE_FAILURE","getProductDetailsById","GET_PRODUCT_DETAILS_BY_ID_REQUEST","productId","GET_PRODUCT_DETAILS_BY_ID_SUCCESS","productDetails","product","GET_PRODUCT_DETAILS_BY_ID_FAILURE"],"mappings":"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","sourcesContent":["import axios from \"../helpers/axios\"\nimport { productConstants } from \"./constants\";\n\nexport const getProductsBySlug = (slug) => {\n    return async dispatch => {\n        const res = await axios.get(`/products/${slug}`);\n        if (res.status === 200) {\n            dispatch({\n                type: productConstants.GET_PRODUCTS_BY_SLUG,\n                payload: res.data\n            });\n        }\n        //console.log(res);\n    }\n}\n\nexport const getProductPage = (payload) => {\n    return async dispatch => {\n        try {\n            const { cid, type } = payload.params;\n            console.log({ payload });\n            const res = await axios.get(`/page/${cid}/${type}`);\n            dispatch({ type: productConstants.GET_PRODUCT_PAGE_REQUEST })\n            console.log(res);\n            if (res.status === 200) {\n                const { page } = res.data;\n                dispatch({\n                    type: productConstants.GET_PRODUCT_PAGE_SUCCESS,\n                    payload: { page }\n                });\n            } else {\n                const { error } = res.data;\n                dispatch({\n                    type: productConstants.GET_PRODUCT_PAGE_FAILURE,\n                    payload: { error }\n                });\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\n\nexport const getProductDetailsById = (payload) => {\n    return async dispatch => {\n        dispatch({ type: productConstants.GET_PRODUCT_DETAILS_BY_ID_REQUEST });\n        let res;\n        try {\n            const { productId } = payload.params;\n            res = await axios.get(`/product/${productId}`);\n            console.log(res);\n            dispatch({\n                type: productConstants.GET_PRODUCT_DETAILS_BY_ID_SUCCESS,\n                payload: { productDetails: res.data.product }\n            });\n\n        } catch(error) {\n            console.log(error);\n            dispatch({\n                type: productConstants.GET_PRODUCT_DETAILS_BY_ID_FAILURE,\n                payload: { error: res.data.error }\n            });\n        }\n\n    }\n}"]},"metadata":{},"sourceType":"module"}