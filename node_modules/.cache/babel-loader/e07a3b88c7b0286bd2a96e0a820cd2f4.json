{"ast":null,"code":"var _jsxFileName = \"/Users/gokul/Documents/M/mern-ecommerce/flipkart-clone/src/containers/CheckoutPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addOrder, getAddress, getCartItems } from \"../../actions\";\nimport Layout from \"../../components/Layout\";\nimport { Anchor, MaterialButton, MaterialInput } from \"../../components/MaterialUI\"; //import PriceDetails from \"../../components/PriceDetails\";\n\nimport Card from \"../../components/UI/Card\";\nimport CartPage from \"../CartPage\";\nimport AddressForm from \"./AddressForm\";\nimport \"./style.css\";\n/**\n * @author\n * @function CheckoutPage\n **/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CheckoutStep = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkoutStep\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      //onClick={props.onClick}\n      className: `checkoutHeader ${props.active && \"active\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stepNumber\",\n          children: props.stepNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stepTitle\",\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), props.body && props.body]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n/* const Address = ({\n  adr,\n  selectAddress,\n  enableAddressEditForm,\n  confirmDeliveryAddress,\n  onAddressSubmit,\n}) => {\n  return (\n    <div className=\"flexRow addressContainer\">\n      <div>\n        <input name=\"address\" onClick={() => selectAddress(adr)} type=\"radio\" />\n      </div>\n      <div className=\"flexRow sb addressinfo\">\n        {!adr.edit ? (\n          <div style={{ width: \"100%\" }}>\n            <div className=\"addressDetail\">\n              <div>\n                <span className=\"addressName\">{adr.name}</span>\n                <span className=\"addressType\">{adr.addressType}</span>\n                <span className=\"addressMobileNumber\">{adr.mobileNumber}</span>\n              </div>\n              {adr.selected && (\n                <Anchor\n                  name=\"EDIT\"\n                  onClick={() => enableAddressEditForm(adr)}\n                  style={{\n                    fontWeight: \"500\",\n                    color: \"#2874f0\",\n                  }}\n                />\n              )}\n            </div>\n            <div className=\"fullAddress\">\n              {adr.address} <br /> {`${adr.state} - ${adr.pinCode}`}\n            </div>\n            {adr.selected && (\n              <MaterialButton\n                title=\"DELIVERY HERE\"\n                onClick={() => confirmDeliveryAddress(adr)}\n                style={{\n                  width: \"200px\",\n                  margin: \"10px 0\",\n                }}\n              />\n            )}\n          </div>\n        ) : (\n          <AddressForm\n            withoutLayout={true}\n            onSubmitForm={onAddressSubmit}\n            initialData={adr}\n            onCancel={() => {}}\n          />\n        )}\n      </div>\n    </div>\n  );\n}; */\n\n\n_c = CheckoutStep;\n\nconst CheckoutPage = props => {\n  _s();\n\n  const user = useSelector(state => state.user);\n  const auth = useSelector(state => state.auth); //const [newAddress, setNewAddress] = useState(false);\n  //const [address, setAddress] = useState([]);\n  //const [confirmAddress, setConfirmAddress] = useState(false);\n  //const [selectedAddress, setSelectedAddress] = useState(null);\n  //const [orderSummary, setOrderSummary] = useState(false);\n  //const [orderConfirmation, setOrderConfirmation] = useState(false);\n  //const [paymentOption, setPaymentOption] = useState(false);\n  //const [confirmOrder, setConfirmOrder] = useState(false);\n  //const cart = useSelector((state) => state.cart);\n\n  const dispatch = useDispatch();\n\n  const onAddressSubmit = addr => {\n    /* setSelectedAddress(addr);\n    setConfirmAddress(true);\n    setOrderSummary(true); */\n  };\n\n  useEffect(() => {\n    dispatch(getAddress());\n  }, []);\n  /* const selectAddress = (addr) => {\n    //console.log(addr);\n    const updatedAddress = address.map((adr) =>\n      adr._id === addr._id\n        ? { ...adr, selected: true }\n        : { ...adr, selected: false }\n    );\n    setAddress(updatedAddress);\n  };\n     const confirmDeliveryAddress = (addr) => {\n    setSelectedAddress(addr);\n    setConfirmAddress(true);\n    setOrderSummary(true);\n  };\n     const enableAddressEditForm = (addr) => {\n    const updatedAddress = address.map((adr) =>\n      adr._id === addr._id ? { ...adr, edit: true } : { ...adr, edit: false }\n    );\n    setAddress(updatedAddress);\n  };\n     const userOrderConfirmation = () => {\n    setOrderConfirmation(true);\n    setOrderSummary(false);\n    setPaymentOption(true);\n  };\n     const onConfirmOrder = () => {\n    const totalAmount = Object.keys(cart.cartItems).reduce(\n      (totalPrice, key) => {\n        const { price, qty } = cart.cartItems[key];\n        return totalPrice + price * qty;\n      },\n      0\n    );\n    const items = Object.keys(cart.cartItems).map((key) => ({\n      productId: key,\n      payablePrice: cart.cartItems[key].price,\n      purchasedQty: cart.cartItems[key].qty,\n    }));\n    const payload = {\n      addressId: selectedAddress._id,\n      totalAmount,\n      items,\n      paymentStatus: \"pending\",\n      paymentType: \"cod\",\n    };\n       console.log(payload);\n    dispatch(addOrder(payload));\n    setConfirmOrder(true);\n  };\n     useEffect(() => {\n    auth.authenticate && dispatch(getAddress());\n    auth.authenticate && dispatch(getCartItems());\n  }, [auth.authenticate]);\n     useEffect(() => {\n    const address = user.address.map((adr) => ({\n      ...adr,\n      selected: false,\n      edit: false,\n    }));\n    setAddress(address);\n    //user.address.length === 0 && setNewAddress(true);\n  }, [user.address]);\n     useEffect(() => {\n    if (confirmOrder && user.placedOrderId) {\n      props.history.push(`/order_details/${user.placedOrderId}`);\n    }\n  }, [user.placedOrderId]); */\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cartContainer\",\n      style: {\n        alignItems: \"flex-start\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkoutContainer\",\n        children: [/*#__PURE__*/_jsxDEV(CheckoutStep, {\n          stepNumber: \"1\",\n          title: \"LOGIN\",\n          active: !auth.authenticate,\n          body: auth.authenticate ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loggedInId\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 500\n              },\n              children: auth.user.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                margin: \"0 5px\"\n              },\n              children: auth.user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MaterialInput, {\n              label: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CheckoutStep, {\n          stepNumber: \"2\",\n          title: \"DELIVERY ADDRESS\",\n          active: false //active={!confirmAddress && auth.authenticate}\n          ,\n          body: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [user.address.map(adr => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flexRow addressContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"address\",\n                  type: \"radio\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flexRow sb addressinfo\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: adr.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: adr.addressType\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: adr.mobileNumber\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: adr.address\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(MaterialButton, {\n                    title: \"DELIVERY HERE\",\n                    style: {\n                      width: '250px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 41\n            }, this)), confirmAddress ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stepCompleted\",\n              children: `${selectedAddress.name} ${selectedAddress.address} - ${selectedAddress.pinCode}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this) : address.map(adr => /*#__PURE__*/_jsxDEV(Address, {\n              selectAddress: selectAddress,\n              enableAddressEditForm: enableAddressEditForm,\n              confirmDeliveryAddress: confirmDeliveryAddress,\n              onAddressSubmit: onAddressSubmit,\n              adr: adr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddressForm, {\n          onSubmitForm: onAddressSubmit,\n          onClick: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CheckoutStep, {\n          stepNumber: \"3\",\n          title: \"ORDER SUMMARY\"\n          /* active={orderSummary}\n          body={\n              orderSummary ? (\n                  <CartPage onlyCartItems={true} />\n              ) : orderConfirmation ? (\n                  <div className=\"stepCompleted\">\n                      {Object.keys(cart.cartItems).length} items\n                  </div>\n              ) : null\n          } */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CheckoutStep, {\n          stepNumber: \"4\",\n          title: \"PAYMENT OPTIONS\"\n          /* active={paymentOption}\n          body={\n              paymentOption && (\n                  <div>\n                      <div\n                          className=\"flexRow\"\n                          style={{\n                              alignItems: \"center\",\n                              padding: \"20px\",\n                          }}\n                      >\n                          <input type=\"radio\" name=\"paymentOption\" value=\"cod\" />\n                          <div>Cash on delivery</div>\n                      </div>\n                      <MaterialButton\n                          title=\"CONFIRM ORDER\"\n                          onClick={onConfirmOrder}\n                          style={{\n                              width: \"200px\",\n                              margin: \"0 0 20px 20px\",\n                          }}\n                      />\n                  </div>\n              )\n          } */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CheckoutPage, \"tIE0WUhijRHCk+3aSmJmOVO9l8k=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c2 = CheckoutPage;\nexport default CheckoutPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CheckoutStep\");\n$RefreshReg$(_c2, \"CheckoutPage\");","map":{"version":3,"sources":["/Users/gokul/Documents/M/mern-ecommerce/flipkart-clone/src/containers/CheckoutPage/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","addOrder","getAddress","getCartItems","Layout","Anchor","MaterialButton","MaterialInput","Card","CartPage","AddressForm","CheckoutStep","props","active","stepNumber","title","body","CheckoutPage","user","state","auth","dispatch","onAddressSubmit","addr","alignItems","authenticate","fontWeight","fullName","margin","email","address","map","adr","name","addressType","mobileNumber","width","confirmAddress","selectedAddress","pinCode","selectAddress","enableAddressEditForm","confirmDeliveryAddress"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addOrder, getAddress, getCartItems } from \"../../actions\";\nimport Layout from \"../../components/Layout\";\nimport {\n    Anchor,\n    MaterialButton,\n    MaterialInput,\n} from \"../../components/MaterialUI\";\n//import PriceDetails from \"../../components/PriceDetails\";\nimport Card from \"../../components/UI/Card\";\nimport CartPage from \"../CartPage\";\nimport AddressForm from \"./AddressForm\";\n\nimport \"./style.css\";\n\n/**\n * @author\n * @function CheckoutPage\n **/\n\nconst CheckoutStep = (props) => {\n    return (\n        <div className=\"checkoutStep\">\n            <div\n                //onClick={props.onClick}\n                className={`checkoutHeader ${props.active && \"active\"}`}\n            >\n                <div>\n                    <span className=\"stepNumber\">{props.stepNumber}</span>\n                    <span className=\"stepTitle\">{props.title}</span>\n                </div>\n            </div>\n            {props.body && props.body}\n        </div>\n    );\n};\n\n/* const Address = ({\n  adr,\n  selectAddress,\n  enableAddressEditForm,\n  confirmDeliveryAddress,\n  onAddressSubmit,\n}) => {\n  return (\n    <div className=\"flexRow addressContainer\">\n      <div>\n        <input name=\"address\" onClick={() => selectAddress(adr)} type=\"radio\" />\n      </div>\n      <div className=\"flexRow sb addressinfo\">\n        {!adr.edit ? (\n          <div style={{ width: \"100%\" }}>\n            <div className=\"addressDetail\">\n              <div>\n                <span className=\"addressName\">{adr.name}</span>\n                <span className=\"addressType\">{adr.addressType}</span>\n                <span className=\"addressMobileNumber\">{adr.mobileNumber}</span>\n              </div>\n              {adr.selected && (\n                <Anchor\n                  name=\"EDIT\"\n                  onClick={() => enableAddressEditForm(adr)}\n                  style={{\n                    fontWeight: \"500\",\n                    color: \"#2874f0\",\n                  }}\n                />\n              )}\n            </div>\n            <div className=\"fullAddress\">\n              {adr.address} <br /> {`${adr.state} - ${adr.pinCode}`}\n            </div>\n            {adr.selected && (\n              <MaterialButton\n                title=\"DELIVERY HERE\"\n                onClick={() => confirmDeliveryAddress(adr)}\n                style={{\n                  width: \"200px\",\n                  margin: \"10px 0\",\n                }}\n              />\n            )}\n          </div>\n        ) : (\n          <AddressForm\n            withoutLayout={true}\n            onSubmitForm={onAddressSubmit}\n            initialData={adr}\n            onCancel={() => {}}\n          />\n        )}\n      </div>\n    </div>\n  );\n}; */\n\nconst CheckoutPage = (props) => {\n    const user = useSelector((state) => state.user);\n    const auth = useSelector((state) => state.auth);\n    //const [newAddress, setNewAddress] = useState(false);\n    //const [address, setAddress] = useState([]);\n    //const [confirmAddress, setConfirmAddress] = useState(false);\n    //const [selectedAddress, setSelectedAddress] = useState(null);\n    //const [orderSummary, setOrderSummary] = useState(false);\n    //const [orderConfirmation, setOrderConfirmation] = useState(false);\n    //const [paymentOption, setPaymentOption] = useState(false);\n    //const [confirmOrder, setConfirmOrder] = useState(false);\n    //const cart = useSelector((state) => state.cart);\n    const dispatch = useDispatch();\n\n    const onAddressSubmit = (addr) => {\n        /* setSelectedAddress(addr);\n        setConfirmAddress(true);\n        setOrderSummary(true); */\n    };\n\n    useEffect(() => {\n        dispatch(getAddress());\n    }, [])\n\n    /* const selectAddress = (addr) => {\n      //console.log(addr);\n      const updatedAddress = address.map((adr) =>\n        adr._id === addr._id\n          ? { ...adr, selected: true }\n          : { ...adr, selected: false }\n      );\n      setAddress(updatedAddress);\n    };\n  \n    const confirmDeliveryAddress = (addr) => {\n      setSelectedAddress(addr);\n      setConfirmAddress(true);\n      setOrderSummary(true);\n    };\n  \n    const enableAddressEditForm = (addr) => {\n      const updatedAddress = address.map((adr) =>\n        adr._id === addr._id ? { ...adr, edit: true } : { ...adr, edit: false }\n      );\n      setAddress(updatedAddress);\n    };\n  \n    const userOrderConfirmation = () => {\n      setOrderConfirmation(true);\n      setOrderSummary(false);\n      setPaymentOption(true);\n    };\n  \n    const onConfirmOrder = () => {\n      const totalAmount = Object.keys(cart.cartItems).reduce(\n        (totalPrice, key) => {\n          const { price, qty } = cart.cartItems[key];\n          return totalPrice + price * qty;\n        },\n        0\n      );\n      const items = Object.keys(cart.cartItems).map((key) => ({\n        productId: key,\n        payablePrice: cart.cartItems[key].price,\n        purchasedQty: cart.cartItems[key].qty,\n      }));\n      const payload = {\n        addressId: selectedAddress._id,\n        totalAmount,\n        items,\n        paymentStatus: \"pending\",\n        paymentType: \"cod\",\n      };\n  \n      console.log(payload);\n      dispatch(addOrder(payload));\n      setConfirmOrder(true);\n    };\n  \n    useEffect(() => {\n      auth.authenticate && dispatch(getAddress());\n      auth.authenticate && dispatch(getCartItems());\n    }, [auth.authenticate]);\n  \n    useEffect(() => {\n      const address = user.address.map((adr) => ({\n        ...adr,\n        selected: false,\n        edit: false,\n      }));\n      setAddress(address);\n      //user.address.length === 0 && setNewAddress(true);\n    }, [user.address]);\n  \n    useEffect(() => {\n      if (confirmOrder && user.placedOrderId) {\n        props.history.push(`/order_details/${user.placedOrderId}`);\n      }\n    }, [user.placedOrderId]); */\n\n    return (\n        <Layout>\n            <div className=\"cartContainer\" style={{ alignItems: \"flex-start\" }}>\n                <div className=\"checkoutContainer\">\n                    {/* check if user logged in or not */}\n                    <CheckoutStep\n                        stepNumber={\"1\"}\n                        title={\"LOGIN\"}\n                        active={!auth.authenticate}\n                        body={\n                            auth.authenticate ? (\n                            <div className=\"loggedInId\">\n                                <span style={{ fontWeight: 500 }}>{auth.user.fullName}</span>\n                                <span style={{ margin: \"0 5px\" }}>{auth.user.email}</span>\n                            </div>\n                             ) : (\n                              <div>\n                                <MaterialInput label=\"Email\" />\n                              </div>\n                            ) \n                        }\n                    />\n                    <CheckoutStep\n                        stepNumber={\"2\"}\n                        title={\"DELIVERY ADDRESS\"}\n                        active={false}\n                        //active={!confirmAddress && auth.authenticate}\n                        body={\n                            <>\n                                {\n                                    user.address.map(adr =>\n                                        <div className='flexRow addressContainer'>\n                                            <div>\n                                                <input name='address' type='radio' />\n                                            </div>\n                                            <div className='flexRow sb addressinfo'>\n                                                <div>\n                                                    <div>\n                                                        <span>{adr.name}</span>\n                                                        <span>{adr.addressType}</span>\n                                                        <span>{adr.mobileNumber}</span>\n                                                    </div>\n                                                    <div>\n                                                        {adr.address}\n                                                    </div>\n                                                    <MaterialButton\n                                                        title=\"DELIVERY HERE\"\n                                                        style={{\n                                                            width: '250px'\n                                                        }}\n                                                    />\n                                                </div>\n                                                <div>edit</div>\n                                            </div>\n                                        </div>\n                                    )\n                                }\n                                {confirmAddress ? (\n                  <div className=\"stepCompleted\">{`${selectedAddress.name} ${selectedAddress.address} - ${selectedAddress.pinCode}`}</div>\n                ) : (\n                  address.map((adr) => (\n                    <Address\n                      selectAddress={selectAddress}\n                      enableAddressEditForm={enableAddressEditForm}\n                      confirmDeliveryAddress={confirmDeliveryAddress}\n                      onAddressSubmit={onAddressSubmit}\n                      adr={adr}\n                    />\n                  ))\n                )}\n                            </>\n                        }\n                    />\n\n                    <AddressForm\n                        onSubmitForm={onAddressSubmit}\n                        onClick={() => { }}\n                    />\n\n                    {/* AddressForm */}\n                    {/* {confirmAddress ? null : newAddress ? (\n                        <AddressForm onSubmitForm={onAddressSubmit} onCancel={() => { }} />\n                    ) : auth.authenticate ? (\n                        <CheckoutStep\n                            stepNumber={\"+\"}\n                            title={\"ADD NEW ADDRESS\"}\n                            active={false}\n                            onClick={() => setNewAddress(true)}\n                        />\n                    ) : null} */}\n\n                    <CheckoutStep\n                        stepNumber={\"3\"}\n                        title={\"ORDER SUMMARY\"}\n                    /* active={orderSummary}\n                    body={\n                        orderSummary ? (\n                            <CartPage onlyCartItems={true} />\n                        ) : orderConfirmation ? (\n                            <div className=\"stepCompleted\">\n                                {Object.keys(cart.cartItems).length} items\n                            </div>\n                        ) : null\n                    } */\n                    />\n\n                    {/* {orderSummary && (\n                        <Card\n                            style={{\n                                margin: \"10px 0\",\n                            }}\n                        >\n                            <div\n                                className=\"flexRow sb\"\n                                style={{\n                                    padding: \"20px\",\n                                    alignItems: \"center\",\n                                }}\n                            >\n                                <p style={{ fontSize: \"12px\" }}>\n                                    Order confirmation email will be sent to{\" \"}\n                                    <strong>{auth.user.email}</strong>\n                                </p>\n                                <MaterialButton\n                                    title=\"CONTINUE\"\n                                    onClick={userOrderConfirmation}\n                                    style={{\n                                        width: \"200px\",\n                                    }}\n                                />\n                            </div>\n                        </Card>\n                    )} */}\n\n                    <CheckoutStep\n                        stepNumber={\"4\"}\n                        title={\"PAYMENT OPTIONS\"}\n                    /* active={paymentOption}\n                    body={\n                        paymentOption && (\n                            <div>\n                                <div\n                                    className=\"flexRow\"\n                                    style={{\n                                        alignItems: \"center\",\n                                        padding: \"20px\",\n                                    }}\n                                >\n                                    <input type=\"radio\" name=\"paymentOption\" value=\"cod\" />\n                                    <div>Cash on delivery</div>\n                                </div>\n                                <MaterialButton\n                                    title=\"CONFIRM ORDER\"\n                                    onClick={onConfirmOrder}\n                                    style={{\n                                        width: \"200px\",\n                                        margin: \"0 0 20px 20px\",\n                                    }}\n                                />\n                            </div>\n                        )\n                    } */\n                    />\n                </div>\n\n                {/* Price Component */}\n                {/* <PriceDetails\n                    totalItem={Object.keys(cart.cartItems).reduce(function (qty, key) {\n                        return qty + cart.cartItems[key].qty;\n                    }, 0)}\n                    totalPrice={Object.keys(cart.cartItems).reduce((totalPrice, key) => {\n                        const { price, qty } = cart.cartItems[key];\n                        return totalPrice + price * qty;\n                    }, 0)}\n                /> */}\n            </div>\n        </Layout>\n    );\n};\n\nexport default CheckoutPage;"]},"metadata":{},"sourceType":"module"}