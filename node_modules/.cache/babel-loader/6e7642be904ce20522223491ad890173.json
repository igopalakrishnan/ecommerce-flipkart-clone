{"ast":null,"code":"var _jsxFileName = \"/Users/gokul/Documents/M/mern-ecommerce/flipkart-clone/src/containers/CartPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Layout from \"../../components/Layout\";\nimport Card from \"../../components/UI/Card\";\nimport { generatePublicUrl } from \"../../urlConfig\";\nimport CartItem from \"./CartItem\";\nimport { addToCart, getCartItems, removeCartItem } from \"../../actions\"; //import PriceDetails from \"../../components/PriceDetails\";\n\nimport \"./style.css\";\nimport { MaterialButton } from \"../../components/MaterialUI\";\n/**\n * @author\n * @function CartPage\n **/\n\n/*\nBefore Login\nAdd product to cart\nsave in localStorage\nwhen try to checkout ask for credentials and \nif logged in then add products to users cart database from localStorage\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartPage = props => {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const auth = useSelector(state => state.auth); // const cartItems = cart.cartItems;\n\n  const [cartItems, setCartItems] = useState(cart.cartItems);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setCartItems(cart.cartItems);\n  }, [cart.cartItems]);\n  useEffect(() => {\n    if (auth.authenticate) {\n      dispatch(getCartItems());\n    }\n  }, [auth.authenticate]);\n\n  const onQuantityIncrement = (_id, qty) => {\n    //console.log({_id, qty});\n    const {\n      name,\n      price,\n      img\n    } = cartItems[_id];\n    dispatch(addToCart({\n      _id,\n      name,\n      price,\n      img\n    }, 1));\n  };\n\n  const onQuantityDecrement = (_id, qty) => {\n    const {\n      name,\n      price,\n      img\n    } = cartItems[_id];\n    dispatch(addToCart({\n      _id,\n      name,\n      price,\n      img\n    }, -1));\n  };\n  /* const onRemoveCartItem = (_id) => {\n    dispatch(removeCartItem({ productId: _id }));\n  }; */\n\n  /* if (props.onlyCartItems) {\n    return (\n      <>\n        {Object.keys(cartItems).map((key, index) => (\n          <CartItem\n            key={index}\n            cartItem={cartItems[key]}\n            onQuantityInc={onQuantityIncrement}\n            onQuantityDec={onQuantityDecrement}\n          />\n        ))}\n      </>\n    );\n  }\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cartContainer\",\n      style: {\n        alignItems: \"flex-start\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        headerLeft: `My Cart`,\n        headerRight: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Deliver to\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 24\n        }, this),\n        style: {\n          width: \"calc(100% - 400px)\",\n          overflow: \"hidden\"\n        },\n        children: [Object.keys(cartItems).map((key, index) => /*#__PURE__*/_jsxDEV(CartItem, {\n          cartItem: cartItems[key],\n          onQuantityInc: onQuantityIncrement,\n          onQuantityDec: onQuantityDecrement //onRemoveCartItem={onRemoveCartItem}\n\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            display: \"flex\",\n            background: \"#ffffff\",\n            justifyContent: \"flex-end\",\n            boxShadow: \"0 0 10px 10px #eee\",\n            padding: \"10px 0\",\n            boxSizing: \"border-box\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"250px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(MaterialButton, {\n              title: \"PLACE ORDER\",\n              onClick: () => props.history.push(`/checkout`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        headerLeft: \"Price\",\n        style: {\n          width: '383px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartPage, \"+z3/yAnkw0mXEsrjMbLZjmllRe4=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = CartPage;\nexport default CartPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"sources":["/Users/gokul/Documents/M/mern-ecommerce/flipkart-clone/src/containers/CartPage/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Layout","Card","generatePublicUrl","CartItem","addToCart","getCartItems","removeCartItem","MaterialButton","CartPage","props","cart","state","auth","cartItems","setCartItems","dispatch","authenticate","onQuantityIncrement","_id","qty","name","price","img","onQuantityDecrement","alignItems","width","overflow","Object","keys","map","key","index","display","background","justifyContent","boxShadow","padding","boxSizing","history","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Layout from \"../../components/Layout\";\nimport Card from \"../../components/UI/Card\";\nimport { generatePublicUrl } from \"../../urlConfig\";\nimport CartItem from \"./CartItem\";\nimport { addToCart, getCartItems, removeCartItem } from \"../../actions\";\n//import PriceDetails from \"../../components/PriceDetails\";\n\nimport \"./style.css\";\nimport { MaterialButton } from \"../../components/MaterialUI\";\n\n/**\n * @author\n * @function CartPage\n **/\n\n/*\nBefore Login\nAdd product to cart\nsave in localStorage\nwhen try to checkout ask for credentials and \nif logged in then add products to users cart database from localStorage\n*/\n\nconst CartPage = (props) => {\n  const cart = useSelector((state) => state.cart);\n  const auth = useSelector((state) => state.auth);\n  // const cartItems = cart.cartItems;\n  const [cartItems, setCartItems] = useState(cart.cartItems);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setCartItems(cart.cartItems);\n  }, [cart.cartItems]);\n\n  useEffect(() => {\n    if (auth.authenticate) {\n      dispatch(getCartItems());\n    }\n  }, [auth.authenticate]);\n\n  const onQuantityIncrement = (_id, qty) => {\n    //console.log({_id, qty});\n    const { name, price, img } = cartItems[_id];\n    dispatch(addToCart({ _id, name, price, img }, 1));\n  };\n\n  const onQuantityDecrement = (_id, qty) => {\n    const { name, price, img } = cartItems[_id];\n    dispatch(addToCart({ _id, name, price, img }, -1));\n  };\n\n  /* const onRemoveCartItem = (_id) => {\n    dispatch(removeCartItem({ productId: _id }));\n  }; */\n\n  /* if (props.onlyCartItems) {\n    return (\n      <>\n        {Object.keys(cartItems).map((key, index) => (\n          <CartItem\n            key={index}\n            cartItem={cartItems[key]}\n            onQuantityInc={onQuantityIncrement}\n            onQuantityDec={onQuantityDecrement}\n          />\n        ))}\n      </>\n    );\n  }\n */\n  return (\n    <Layout>\n      <div className=\"cartContainer\" style={{ alignItems: \"flex-start\" }}>\n        <Card\n          headerLeft={`My Cart`}\n          headerRight={<div>Deliver to</div>}\n          style={{ width: \"calc(100% - 400px)\", overflow: \"hidden\" }}\n        >\n          {Object.keys(cartItems).map((key, index) =>\n            <CartItem\n              key={index}\n              cartItem={cartItems[key]}\n              onQuantityInc={onQuantityIncrement}\n              onQuantityDec={onQuantityDecrement}\n            //onRemoveCartItem={onRemoveCartItem}\n            />\n          )}\n\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              background: \"#ffffff\",\n              justifyContent: \"flex-end\",\n              boxShadow: \"0 0 10px 10px #eee\",\n              padding: \"10px 0\",\n              boxSizing: \"border-box\",\n            }}\n          >\n            <div style={{ width: \"250px\" }}>\n              <MaterialButton\n                title=\"PLACE ORDER\"\n                onClick={() => props.history.push(`/checkout`)}\n              />\n            </div>\n          </div>\n        </Card>\n        <Card\n          headerLeft='Price'\n          style={{\n            width: '383px'\n          }}\n        >\n\n        </Card>\n        {/*  <PriceDetails\n          totalItem={Object.keys(cart.cartItems).reduce(function (qty, key) {\n            return qty + cart.cartItems[key].qty;\n          }, 0)}\n          totalPrice={Object.keys(cart.cartItems).reduce((totalPrice, key) => {\n            const { price, qty } = cart.cartItems[key];\n            return totalPrice + price * qty;\n          }, 0)}\n        /> */}\n      </div>\n    </Layout>\n  );\n};\n\nexport default CartPage;"]},"metadata":{},"sourceType":"module"}