{"ast":null,"code":"var _jsxFileName = \"/Users/gokul/Documents/M/mern-ecommerce/flipkart-clone/src/containers/CheckoutPage/AddressForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addAddress } from \"../../actions\";\nimport { MaterialButton, MaterialInput } from \"../../components/MaterialUI\";\n/**\n * @author\n * @function AddressForm\n **/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddressForm = props => {\n  _s();\n\n  //const { initialData } = props;\n  const [name, setName] = useState(\n  /* initialData ? initialData.name :  */\n  \"\");\n  const [mobileNumber, setMobileNumber] = useState(\n  /* initialData ? initialData.mobileNumber : */\n  \"\");\n  const [pinCode, setPinCode] = useState(\n  /* initialData ? initialData.pinCode : */\n  \"\");\n  const [locality, setLocality] = useState(\n  /* initialData ? initialData.locality : */\n  \"\");\n  const [address, setAddress] = useState(\n  /* initialData ? initialData.address : */\n  \"\");\n  const [cityDistrictTown, setCityDistrictTown] = useState(\n  /* initialData ? initialData.cityDistrictTown : */\n  \"\");\n  const [state, setState] = useState(\n  /* initialData ? initialData.state : */\n  \"\");\n  const [landmark, setLandmark] = useState(\n  /* initialData ? initialData.landmark : */\n  \"\");\n  const [alternatePhone, setAlternatePhone] = useState(\n  /* initialData ? initialData.alternatePhone : */\n  \"\");\n  const [addressType, setAddressType] = useState(\n  /* initialData ? initialData.addressType : */\n  \"\");\n  const dispatch = useDispatch(); //const user = useSelector((state) => state.user);\n  //const [submitFlag, setSubmitFlag] = useState(false);\n  //const [id, setId] = useState(initialData ? initialData._id : \"\");\n\n  const inputContainer = {\n    width: \"100%\",\n    marginRight: 10\n  };\n\n  const onAddressSubmit = e => {\n    const payload = {\n      address: {\n        name,\n        mobileNumber,\n        pinCode,\n        locality,\n        address,\n        cityDistrictTown,\n        state,\n        landmark,\n        alternatePhone,\n        addressType\n      }\n    };\n    console.log(payload);\n    /* if (id) {\n      payload.address._id = id;\n    } */\n\n    dispatch(addAddress(payload)); //setSubmitFlag(true);\n  };\n  /*  useEffect(() => {\n     console.log(\"addressCount\", user.address);\n     if (submitFlag) {\n       console.log(\"where are we\", user);\n       let _address = {};\n       if (id) {\n         _address = {\n           _id: id,\n           name,\n           mobileNumber,\n           pinCode,\n           locality,\n           address,\n           cityDistrictTown,\n           state,\n           landmark,\n           alternatePhone,\n           addressType,\n         };\n       } else {\n         _address = user.address.slice(user.address.length - 1)[0];\n       }\n           props.onSubmitForm(_address);\n     }\n   }, [user.address]);\n       const renderAddressForm = () => {\n     return (\n       <>\n         <div className=\"flexRow\">\n           <div style={inputContainer}>\n             <MaterialInput\n               label=\"Name\"\n               value={name}\n               onChange={(e) => setName(e.target.value)}\n             />\n           </div>\n           <div style={inputContainer}>\n             <MaterialInput\n               label=\"10-digit mobile number\"\n               value={mobileNumber}\n               onChange={(e) => setMobileNumber(e.target.value)}\n             />\n           </div>\n         </div>\n         <div className=\"flexRow\">\n           <div style={inputContainer}>\n             <MaterialInput\n               label=\"Pincode\"\n               value={pinCode}\n               onChange={(e) => setPinCode(e.target.value)}\n             />\n           </div>\n           <div style={inputContainer}>\n             <MaterialInput\n               label=\"Locality\"\n               value={locality}\n               onChange={(e) => setLocality(e.target.value)}\n             />\n           </div>\n         </div>\n         <div className=\"flexRow\">\n           <div style={inputContainer}>\n             <MaterialInput\n               label=\"Address\"\n               value={address}\n               onChange={(e) => setAddress(e.target.value)}\n             />\n           </div>\n         </div>\n             <div className=\"flexRow\">\n           <div style={inputContainer}>\n             <MaterialInput\n               label=\"City/District/Town\"\n               value={cityDistrictTown}\n               onChange={(e) => setCityDistrictTown(e.target.value)}\n             />\n           </div>\n           <div style={inputContainer}>\n             <MaterialInput\n               label=\"State\"\n               value={state}\n               onChange={(e) => setState(e.target.value)}\n             />\n           </div>\n         </div>\n         <div className=\"flexRow\">\n           <div style={inputContainer}>\n             <MaterialInput\n               label=\"Landmark (Optional)\"\n               value={landmark}\n               onChange={(e) => setLandmark(e.target.value)}\n             />\n           </div>\n           <div style={inputContainer}>\n             <MaterialInput\n               label=\"Alternate Phone (Optional)\"\n               value={alternatePhone}\n               onChange={(e) => setAlternatePhone(e.target.value)}\n             />\n           </div>\n         </div>\n         <div>\n           <label>Address Type</label>\n           <div className=\"flexRow\">\n             <div>\n               <input\n                 type=\"radio\"\n                 onClick={() => setAddressType(\"home\")}\n                 name=\"addressType\"\n                 value=\"home\"\n               />\n               <span>Home</span>\n             </div>\n             <div>\n               <input\n                 type=\"radio\"\n                 onClick={() => setAddressType(\"work\")}\n                 name=\"addressType\"\n                 value=\"work\"\n               />\n               <span>Work</span>\n             </div>\n           </div>\n         </div>\n         <div className=\"flexRow\">\n           <MaterialButton\n             title=\"SAVE AND DELIVER HERE\"\n             onClick={onAddressSubmit}\n             style={{\n               width: \"250px\",\n               margin: \"20px 0\",\n             }}\n           />\n         </div>\n       </>\n     );\n   };\n       if (props.withoutLayout) {\n     return <div>{renderAddressForm()}</div>;\n   } */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkoutStep\",\n    style: {\n      background: \"#f5faff\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `checkoutHeader`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stepNumber\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stepTitle\",\n          children: \"ADD NEW ADDRESS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"0 60px\",\n        paddingBottom: \"20px\",\n        boxSizing: \"border-box\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: inputContainer,\n          children: /*#__PURE__*/_jsxDEV(MaterialInput, {\n            label: \"Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: inputContainer,\n          children: /*#__PURE__*/_jsxDEV(MaterialInput, {\n            label: \"10-digit mobile number\",\n            value: mobileNumber,\n            onChange: e => setMobileNumber(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: inputContainer,\n          children: /*#__PURE__*/_jsxDEV(MaterialInput, {\n            label: \"Pincode\",\n            value: pinCode,\n            onChange: e => setPinCode(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: inputContainer,\n          children: /*#__PURE__*/_jsxDEV(MaterialInput, {\n            label: \"Locality\",\n            value: locality,\n            onChange: e => setLocality(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexRow\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: inputContainer,\n          children: /*#__PURE__*/_jsxDEV(MaterialInput, {\n            label: \"Address\",\n            value: address,\n            onChange: e => setAddress(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: inputContainer,\n          children: /*#__PURE__*/_jsxDEV(MaterialInput, {\n            label: \"City/District/Town\",\n            value: cityDistrictTown,\n            onChange: e => setCityDistrictTown(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: inputContainer,\n          children: /*#__PURE__*/_jsxDEV(MaterialInput, {\n            label: \"State\",\n            value: state,\n            onChange: e => setState(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: inputContainer,\n          children: /*#__PURE__*/_jsxDEV(MaterialInput, {\n            label: \"Landmark (Optional)\",\n            value: landmark,\n            onChange: e => setLandmark(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: inputContainer,\n          children: /*#__PURE__*/_jsxDEV(MaterialInput, {\n            label: \"Alternate Phone (Optional)\",\n            value: alternatePhone,\n            onChange: e => setAlternatePhone(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Address Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              onClick: () => setAddressType(\"home\"),\n              name: \"addressType\",\n              value: \"home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              onClick: () => setAddressType(\"work\"),\n              name: \"addressType\",\n              value: \"work\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Work\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexRow\",\n        children: /*#__PURE__*/_jsxDEV(MaterialButton, {\n          title: \"SAVE AND DELIVER HERE\",\n          onClick: onAddressSubmit,\n          style: {\n            width: \"250px\",\n            margin: \"20px 0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddressForm, \"i2xZdcarztyTP4lndALn2kgoIsE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddressForm;\nexport default AddressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"sources":["/Users/gokul/Documents/M/mern-ecommerce/flipkart-clone/src/containers/CheckoutPage/AddressForm.js"],"names":["React","useEffect","useState","useDispatch","useSelector","addAddress","MaterialButton","MaterialInput","AddressForm","props","name","setName","mobileNumber","setMobileNumber","pinCode","setPinCode","locality","setLocality","address","setAddress","cityDistrictTown","setCityDistrictTown","state","setState","landmark","setLandmark","alternatePhone","setAlternatePhone","addressType","setAddressType","dispatch","inputContainer","width","marginRight","onAddressSubmit","e","payload","console","log","background","padding","paddingBottom","boxSizing","target","value","margin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,6BAA9C;AAEA;AACA;AACA;AACA;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ;AAAC;AAAuC,IAAxC,CAAhC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ;AAChD;AAA+C,IADC,CAAhD;AAGA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ;AACtC;AAA0C,IADJ,CAAtC;AAGA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ;AACxC;AAA2C,IADH,CAAxC;AAGA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ;AACtC;AAA0C,IADJ,CAAtC;AAGA,QAAM,CAACkB,gBAAD,EAAmBC,mBAAnB,IAA0CnB,QAAQ;AACxD;AAAmD,IADK,CAAxD;AAGA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ;AAAC;AAAwC,IAAzC,CAAlC;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ;AACxC;AAA2C,IADH,CAAxC;AAGA,QAAM,CAACwB,cAAD,EAAiBC,iBAAjB,IAAsCzB,QAAQ;AACpD;AAAiD,IADG,CAApD;AAGA,QAAM,CAAC0B,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ;AAC9C;AAA8C,IADA,CAA9C;AAGA,QAAM4B,QAAQ,GAAG3B,WAAW,EAA5B,CA5B2B,CA6B3B;AACA;AACA;;AAEA,QAAM4B,cAAc,GAAG;AACnBC,IAAAA,KAAK,EAAE,MADY;AAEnBC,IAAAA,WAAW,EAAE;AAFM,GAAvB;;AAKA,QAAMC,eAAe,GAAIC,CAAD,IAAO;AAC3B,UAAMC,OAAO,GAAG;AACZlB,MAAAA,OAAO,EAAE;AACLR,QAAAA,IADK;AAELE,QAAAA,YAFK;AAGLE,QAAAA,OAHK;AAILE,QAAAA,QAJK;AAKLE,QAAAA,OALK;AAMLE,QAAAA,gBANK;AAOLE,QAAAA,KAPK;AAQLE,QAAAA,QARK;AASLE,QAAAA,cATK;AAULE,QAAAA;AAVK;AADG,KAAhB;AAcAS,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA;AACR;AACA;;AACQN,IAAAA,QAAQ,CAACzB,UAAU,CAAC+B,OAAD,CAAX,CAAR,CAnB2B,CAoB3B;AACH,GArBD;AAuBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAMI,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAAEG,MAAAA,UAAU,EAAE;AAAd,KAArC;AAAA,4BACI;AAAK,MAAA,SAAS,EAAG,gBAAjB;AAAA,6BACI;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAC,W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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addAddress } from \"../../actions\";\nimport { MaterialButton, MaterialInput } from \"../../components/MaterialUI\";\n\n/**\n * @author\n * @function AddressForm\n **/\n\nconst AddressForm = (props) => {\n    //const { initialData } = props;\n    const [name, setName] = useState(/* initialData ? initialData.name :  */\"\");\n    const [mobileNumber, setMobileNumber] = useState(\n    /* initialData ? initialData.mobileNumber : */ \"\"\n    );\n    const [pinCode, setPinCode] = useState(\n    /* initialData ? initialData.pinCode : */ \"\"\n    );\n    const [locality, setLocality] = useState(\n    /* initialData ? initialData.locality : */ \"\"\n    );\n    const [address, setAddress] = useState(\n    /* initialData ? initialData.address : */ \"\"\n    );\n    const [cityDistrictTown, setCityDistrictTown] = useState(\n    /* initialData ? initialData.cityDistrictTown : */ \"\"\n    );\n    const [state, setState] = useState(/* initialData ? initialData.state : */ \"\");\n    const [landmark, setLandmark] = useState(\n    /* initialData ? initialData.landmark : */ \"\"\n    );\n    const [alternatePhone, setAlternatePhone] = useState(\n    /* initialData ? initialData.alternatePhone : */ \"\"\n    );\n    const [addressType, setAddressType] = useState(\n    /* initialData ? initialData.addressType : */ \"\"\n    );\n    const dispatch = useDispatch();\n    //const user = useSelector((state) => state.user);\n    //const [submitFlag, setSubmitFlag] = useState(false);\n    //const [id, setId] = useState(initialData ? initialData._id : \"\");\n\n    const inputContainer = {\n        width: \"100%\",\n        marginRight: 10,\n    };\n\n    const onAddressSubmit = (e) => {\n        const payload = {\n            address: {\n                name,\n                mobileNumber,\n                pinCode,\n                locality,\n                address,\n                cityDistrictTown,\n                state,\n                landmark,\n                alternatePhone,\n                addressType,\n            },\n        };\n        console.log(payload);\n        /* if (id) {\n          payload.address._id = id;\n        } */\n        dispatch(addAddress(payload));\n        //setSubmitFlag(true);\n    };\n\n    /*  useEffect(() => {\n       console.log(\"addressCount\", user.address);\n       if (submitFlag) {\n         console.log(\"where are we\", user);\n         let _address = {};\n         if (id) {\n           _address = {\n             _id: id,\n             name,\n             mobileNumber,\n             pinCode,\n             locality,\n             address,\n             cityDistrictTown,\n             state,\n             landmark,\n             alternatePhone,\n             addressType,\n           };\n         } else {\n           _address = user.address.slice(user.address.length - 1)[0];\n         }\n   \n         props.onSubmitForm(_address);\n       }\n     }, [user.address]);\n   \n     const renderAddressForm = () => {\n       return (\n         <>\n           <div className=\"flexRow\">\n             <div style={inputContainer}>\n               <MaterialInput\n                 label=\"Name\"\n                 value={name}\n                 onChange={(e) => setName(e.target.value)}\n               />\n             </div>\n             <div style={inputContainer}>\n               <MaterialInput\n                 label=\"10-digit mobile number\"\n                 value={mobileNumber}\n                 onChange={(e) => setMobileNumber(e.target.value)}\n               />\n             </div>\n           </div>\n           <div className=\"flexRow\">\n             <div style={inputContainer}>\n               <MaterialInput\n                 label=\"Pincode\"\n                 value={pinCode}\n                 onChange={(e) => setPinCode(e.target.value)}\n               />\n             </div>\n             <div style={inputContainer}>\n               <MaterialInput\n                 label=\"Locality\"\n                 value={locality}\n                 onChange={(e) => setLocality(e.target.value)}\n               />\n             </div>\n           </div>\n           <div className=\"flexRow\">\n             <div style={inputContainer}>\n               <MaterialInput\n                 label=\"Address\"\n                 value={address}\n                 onChange={(e) => setAddress(e.target.value)}\n               />\n             </div>\n           </div>\n   \n           <div className=\"flexRow\">\n             <div style={inputContainer}>\n               <MaterialInput\n                 label=\"City/District/Town\"\n                 value={cityDistrictTown}\n                 onChange={(e) => setCityDistrictTown(e.target.value)}\n               />\n             </div>\n             <div style={inputContainer}>\n               <MaterialInput\n                 label=\"State\"\n                 value={state}\n                 onChange={(e) => setState(e.target.value)}\n               />\n             </div>\n           </div>\n           <div className=\"flexRow\">\n             <div style={inputContainer}>\n               <MaterialInput\n                 label=\"Landmark (Optional)\"\n                 value={landmark}\n                 onChange={(e) => setLandmark(e.target.value)}\n               />\n             </div>\n             <div style={inputContainer}>\n               <MaterialInput\n                 label=\"Alternate Phone (Optional)\"\n                 value={alternatePhone}\n                 onChange={(e) => setAlternatePhone(e.target.value)}\n               />\n             </div>\n           </div>\n           <div>\n             <label>Address Type</label>\n             <div className=\"flexRow\">\n               <div>\n                 <input\n                   type=\"radio\"\n                   onClick={() => setAddressType(\"home\")}\n                   name=\"addressType\"\n                   value=\"home\"\n                 />\n                 <span>Home</span>\n               </div>\n               <div>\n                 <input\n                   type=\"radio\"\n                   onClick={() => setAddressType(\"work\")}\n                   name=\"addressType\"\n                   value=\"work\"\n                 />\n                 <span>Work</span>\n               </div>\n             </div>\n           </div>\n           <div className=\"flexRow\">\n             <MaterialButton\n               title=\"SAVE AND DELIVER HERE\"\n               onClick={onAddressSubmit}\n               style={{\n                 width: \"250px\",\n                 margin: \"20px 0\",\n               }}\n             />\n           </div>\n         </>\n       );\n     };\n   \n     if (props.withoutLayout) {\n       return <div>{renderAddressForm()}</div>;\n     } */\n\n    return (\n        <div className=\"checkoutStep\" style={{ background: \"#f5faff\" }}>\n            <div className={`checkoutHeader`}>\n                <div>\n                    <span className=\"stepNumber\">+</span>\n                    <span className=\"stepTitle\">{\"ADD NEW ADDRESS\"}</span>\n                </div>\n            </div>\n            <div\n                style={{\n                    padding: \"0 60px\",\n                    paddingBottom: \"20px\",\n                    boxSizing: \"border-box\",\n                }}\n            >\n                <div className=\"flexRow\">\n                    <div style={inputContainer}>\n                        <MaterialInput\n                            label=\"Name\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                    </div>\n                    <div style={inputContainer}>\n                        <MaterialInput\n                            label=\"10-digit mobile number\"\n                            value={mobileNumber}\n                            onChange={(e) => setMobileNumber(e.target.value)}\n                        />\n                    </div>\n                </div>\n                <div className=\"flexRow\">\n                    <div style={inputContainer}>\n                        <MaterialInput\n                            label=\"Pincode\"\n                            value={pinCode}\n                            onChange={(e) => setPinCode(e.target.value)}\n                        />\n                    </div>\n                    <div style={inputContainer}>\n                        <MaterialInput\n                            label=\"Locality\"\n                            value={locality}\n                            onChange={(e) => setLocality(e.target.value)}\n                        />\n                    </div>\n                </div>\n                <div className=\"flexRow\">\n                    <div style={inputContainer}>\n                        <MaterialInput\n                            label=\"Address\"\n                            value={address}\n                            onChange={(e) => setAddress(e.target.value)}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"flexRow\">\n                    <div style={inputContainer}>\n                        <MaterialInput\n                            label=\"City/District/Town\"\n                            value={cityDistrictTown}\n                            onChange={(e) => setCityDistrictTown(e.target.value)}\n                        />\n                    </div>\n                    <div style={inputContainer}>\n                        <MaterialInput\n                            label=\"State\"\n                            value={state}\n                            onChange={(e) => setState(e.target.value)}\n                        />\n                    </div>\n                </div>\n                <div className=\"flexRow\">\n                    <div style={inputContainer}>\n                        <MaterialInput\n                            label=\"Landmark (Optional)\"\n                            value={landmark}\n                            onChange={(e) => setLandmark(e.target.value)}\n                        />\n                    </div>\n                    <div style={inputContainer}>\n                        <MaterialInput\n                            label=\"Alternate Phone (Optional)\"\n                            value={alternatePhone}\n                            onChange={(e) => setAlternatePhone(e.target.value)}\n                        />\n                    </div>\n                </div>\n                <div>\n                    <label>Address Type</label>\n                    <div className=\"flexRow\">\n                        <div>\n                            <input\n                                type=\"radio\"\n                                onClick={() => setAddressType(\"home\")}\n                                name=\"addressType\"\n                                value=\"home\"\n                            />\n                            <span>Home</span>\n                        </div>\n                        <div>\n                            <input\n                                type=\"radio\"\n                                onClick={() => setAddressType(\"work\")}\n                                name=\"addressType\"\n                                value=\"work\"\n                            />\n                            <span>Work</span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flexRow\">\n                    <MaterialButton\n                        title=\"SAVE AND DELIVER HERE\"\n                        onClick={onAddressSubmit}\n                        style={{\n                            width: \"250px\",\n                            margin: \"20px 0\",\n                        }}\n                    />\n                </div>\n                {/* {renderAddressForm()} */}\n            </div>\n        </div>\n    );\n};\n\nexport default AddressForm;"]},"metadata":{},"sourceType":"module"}